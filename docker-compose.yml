services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: urban_espionage
      POSTGRES_USER: urban_user
      POSTGRES_PASSWORD: urban_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U urban_user -d urban_espionage"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://urban_user:urban_password@db:5432/urban_espionage
      REDIS_HOST: redis
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-django-insecure-dev-key-change-in-production}
      DEBUG: ${DEBUG:-True}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      DJANGO_SETTINGS_MODULE: examplesite.settings

  # Production-ready ASGI server for WebSockets
  daphne:
    build: .
    command: daphne -b 0.0.0.0 -p 8001 examplesite.asgi:application
    volumes:
      - .:/code
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://urban_user:urban_password@db:5432/urban_espionage
      REDIS_HOST: redis
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-django-insecure-dev-key-change-in-production}
      DEBUG: ${DEBUG:-True}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      DJANGO_SETTINGS_MODULE: examplesite.settings

volumes:
  postgres_data:
  redis_data: